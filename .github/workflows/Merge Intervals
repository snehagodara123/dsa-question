import java.util.*;

public class MergeIntervals {
    
    public static int[][] merge(int[][] intervals) {
        if (intervals.length == 0) return new int[0][0];
        
        
        Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0]));
        
        
        List<int[]> merged = new ArrayList<>();
        
    
        merged.add(intervals[0]);
        
        for (int i = 1; i < intervals.length; i++) {
            int[] lastMerged = merged.get(merged.size() - 1);
            int[] currentInterval = intervals[i];
            
      
            if (currentInterval[0] <= lastMerged[1]) {
                
                lastMerged[1] = Math.max(lastMerged[1], currentInterval[1]);
            } else {
                
                merged.add(currentInterval);
            }
        }
        
      
        return merged.toArray(new int[merged.size()][]);
    }

    public static void main(String[] args) {
        int[][] intervals = {{1, 3}, {2, 4}, {5, 7}, {6, 8}};
        
        int[][] mergedIntervals = merge(intervals);
        
        
        for (int[] interval : mergedIntervals) {
            System.out.println(Arrays.toString(interval));
        }
    }
}
